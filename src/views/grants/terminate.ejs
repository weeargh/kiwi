<div class="modal-header">
  <h5 class="modal-title">Terminate Grant<% if (grant && grant.employeeName) { %> (<%= grant.employeeName %>)<% } %></h5>
  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<form action="/grants/<%= grant.uid %>/terminate" method="POST">
  <div class="modal-body">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <input type="hidden" name="version" value="<%= formValues.version %>">
    <div class="mb-3">
      <label for="termination_effective_date" class="form-label">Termination Effective Date</label>
      <input type="date" class="form-control <%= validationErrors.termination_effective_date ? 'is-invalid' : '' %>" id="termination_effective_date" name="termination_effective_date" value="<%= formValues.termination_effective_date || (new Date().toISOString().split('T')[0]) %>" required>
      <% if (validationErrors.termination_effective_date) { %>
        <div class="invalid-feedback"><%= validationErrors.termination_effective_date %></div>
      <% } %>
    </div>
    <div id="grant-termination-summary" class="mb-3">
      <!-- Dynamic summary of vested/unvested shares as of selected date will be inserted here by JS -->
    </div>
    <div class="mb-3">
      <label for="treatment_for_vested" class="form-label">Treatment for Vested Shares</label>
      <select class="form-select <%= validationErrors.treatment_for_vested ? 'is-invalid' : '' %>" id="treatment_for_vested" name="treatment_for_vested" required>
        <option value="" disabled <%= !formValues.treatment_for_vested ? 'selected' : '' %>>Select treatment</option>
        <option value="buyback" <%= formValues.treatment_for_vested === 'buyback' ? 'selected' : '' %>>Buyback by company</option>
        <option value="retain" <%= formValues.treatment_for_vested === 'retain' ? 'selected' : '' %>>Retain by employee</option>
        <option value="cancel" <%= formValues.treatment_for_vested === 'cancel' ? 'selected' : '' %>>Cancel (return to pool)</option>
      </select>
      <% if (validationErrors.treatment_for_vested) { %>
        <div class="invalid-feedback"><%= validationErrors.treatment_for_vested %></div>
      <% } %>
    </div>
    <div class="mb-3">
      <label for="reason" class="form-label">Reason (optional)</label>
      <textarea class="form-control <%= validationErrors.reason ? 'is-invalid' : '' %>" id="reason" name="reason" rows="2"><%= formValues.reason || '' %></textarea>
      <% if (validationErrors.reason) { %>
        <div class="invalid-feedback"><%= validationErrors.reason %></div>
      <% } %>
    </div>
    <div class="alert alert-warning mt-3">
      <strong>Warning:</strong> Terminating this grant will return all unvested shares to the pool and stop further vesting. This action cannot be undone.
    </div>
  </div>
  <div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
    <button type="submit" class="btn btn-danger">Terminate Grant</button>
  </div>
</form>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const dateInput = document.getElementById('termination_effective_date');
  const treatmentInput = document.getElementById('treatment_for_vested');
  const summaryDiv = document.getElementById('grant-termination-summary');
  const grantUid = '<%= grant.uid %>';

  function updateSummary() {
    const date = dateInput.value;
    const treatment = treatmentInput.value;
    if (!date) {
      summaryDiv.innerHTML = '';
      return;
    }
    summaryDiv.innerHTML = '<div class="text-muted">Calculating vesting as of selected date...</div>';
    let url = `/grants/${grantUid}/termination-summary?date=${encodeURIComponent(date)}`;
    if (treatment) {
      url += `&treatment=${encodeURIComponent(treatment)}`;
    }
    fetch(url)
      .then(res => res.json())
      .then(data => {
        if (!data.success) {
          summaryDiv.innerHTML = `<div class='text-danger'>${data.message || 'Error calculating summary.'}</div>`;
          return;
        }
        let vestedText = Number(data.vested).toLocaleString('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 });
        let manualVestedText = Number(data.manualVested).toLocaleString('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 });
        let totalVestedText = Number(data.totalVestedIncludingManual).toLocaleString('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 });
        let unvestedText = Number(data.unvested).toLocaleString('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 });
        let vestedReturnedText = Number(data.vestedReturned).toLocaleString('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 });
        let treatmentLabel = data.treatment === 'buyback' ? 'will be bought back by company' : data.treatment === 'cancel' ? 'will be returned to the pool (cancel)' : data.treatment === 'retain' ? 'will remain with the employee' : 'select a treatment';
        summaryDiv.innerHTML = `
          <div class='alert alert-info mb-2'>
            <strong>Vesting as of <span class='text-primary'>${date}</span>:</strong><br>
            <div><strong>Vested shares (as of termination):</strong> ${vestedText}</div>
            <div>+ <strong>Manually vested after termination:</strong> ${manualVestedText}</div>
            <div>= <strong>Total vested shares:</strong> ${totalVestedText} (${treatment ? treatmentLabel + (data.treatment === 'buyback' || data.treatment === 'cancel' ? `, <strong>${vestedReturnedText}</strong> returned to pool` : '') : 'select a treatment for details'})</div>
            <div><strong>Unvested shares:</strong> ${unvestedText} (will be returned to the pool)</div>
            <div class='small text-muted mt-1'>${data.explanation || ''}</div>
          </div>
        `;
      })
      .catch(err => {
        summaryDiv.innerHTML = `<div class='text-danger'>Error: ${err.message || err}</div>`;
      });
  }

  dateInput.addEventListener('change', updateSummary);
  treatmentInput.addEventListener('change', updateSummary);
  // Initial summary
  updateSummary();
});
</script> 